{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// import { lunchAllList, createlunch, updatelunch, deletelunch , getLunchList} from '../services/api'\n// import { message } from 'antd';\n// export default {\n//   namespace: 'subjects',\n//   state: {\n//     add: { count: 0 },\n//     edit: { count: 0 },\n//     fileUp: { count: 0 },\n//     del: { count: 0 }\n//   },\n//   subscriptions: {\n//     setup({ dispatch, history }) {\n//     },\n//   }, \n//   effects: {\n//     *lunchAllList({ payload }, { call, put }) {\n//       const response = yield call(lunchAllList, payload);\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\n//       yield put({ type: 'list', ...response });\n//     },\n//     *getLunchList({ payload }, { call, put }) {\n//       const response = yield call(getLunchList, payload);\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\n//       yield put({ type: 'list', ...response });\n//     },\n//     *lunchAdd({ payload }, { call, put }) {\n//       const response = yield call(createlunch, payload);\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\n//       if (response.status) { message.success(response.message, 5); }\n//       yield put({ type: 'add', ...response });\n//     },\n//     *lunchEdit({ payload }, { call, put }) {\n//       const response = yield call(updatelunch, payload);\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\n//       if (response.status) { message.success(response.message, 5); }\n//       yield put({ type: 'edit', ...response });\n//     },\n//     *lunchDelete({ payload }, { call, put }) {\n//       const response = yield call(deletelunch, payload);\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\n//       if (response.status) { message.success(response.message, 5); }\n//       yield put({ type: 'del', ...response });\n//     },\n//     *clearAction({ payload }, { call, put }) {\n//       yield put({ type: 'clear'});\n//     },\n//   },\n//   reducers: {\n//     list(state, action) {\n//       return { ...state, list: action };\n//     },\n//     add(state, action) {\n//       action.count = state.add.count + 1;\n//       return { ...state, add: action };\n//     },\n//     edit(state, action) {\n//       action.count = state.edit.count + 1;\n//       return { ...state, edit: action };\n//     },\n//     del(state, action) {\n//       action.count = state.del.count + 1;\n//       return { ...state, del: action };\n//     },\n//     clear(state, action) {\n//       return { ...state, edit:{count:0}, del:{count:0}};\n//       },\n//   },\n// };\nimport{subjectAllList as _subjectAllList,createsubject,updatesubject,deletesubject,getsubjectList as _getsubjectList}from'../services/api';import{message}from'antd';export default{namespace:'subjects',state:{add:{count:0},edit:{count:0},fileUp:{count:0},del:{count:0}},subscriptions:{setup:function setup(_ref){var dispatch=_ref.dispatch,history=_ref.history;}},effects:{subjectAllList:/*#__PURE__*/_regeneratorRuntime.mark(function subjectAllList(_ref2,_ref3){var payload,call,put,response;return _regeneratorRuntime.wrap(function subjectAllList$(_context){while(1){switch(_context.prev=_context.next){case 0:payload=_ref2.payload;call=_ref3.call,put=_ref3.put;_context.next=4;return call(_subjectAllList,payload);case 4:response=_context.sent;if(!response.status){message.error(response.msg||response.message||response.err,5);}_context.next=8;return put(_objectSpread({type:'list'},response));case 8:case\"end\":return _context.stop();}}},subjectAllList);}),getsubjectList:/*#__PURE__*/_regeneratorRuntime.mark(function getsubjectList(_ref4,_ref5){var payload,call,put,response;return _regeneratorRuntime.wrap(function getsubjectList$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:payload=_ref4.payload;call=_ref5.call,put=_ref5.put;_context2.next=4;return call(_getsubjectList,payload);case 4:response=_context2.sent;if(!response.status){message.error(response.msg||response.message||response.err,5);}_context2.next=8;return put(_objectSpread({type:'list'},response));case 8:case\"end\":return _context2.stop();}}},getsubjectList);}),subjectAdd:/*#__PURE__*/_regeneratorRuntime.mark(function subjectAdd(_ref6,_ref7){var payload,call,put,response;return _regeneratorRuntime.wrap(function subjectAdd$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:payload=_ref6.payload;call=_ref7.call,put=_ref7.put;_context3.next=4;return call(createsubject,payload);case 4:response=_context3.sent;if(!response.status){message.error(response.msg||response.message||response.err,5);}if(response.status){message.success(response.message,5);}_context3.next=9;return put(_objectSpread({type:'add'},response));case 9:case\"end\":return _context3.stop();}}},subjectAdd);}),subjectEdit:/*#__PURE__*/_regeneratorRuntime.mark(function subjectEdit(_ref8,_ref9){var payload,call,put,response;return _regeneratorRuntime.wrap(function subjectEdit$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:payload=_ref8.payload;call=_ref9.call,put=_ref9.put;_context4.next=4;return call(updatesubject,payload);case 4:response=_context4.sent;if(!response.status){message.error(response.msg||response.message||response.err,5);}if(response.status){message.success(response.message,5);}_context4.next=9;return put(_objectSpread({type:'edit'},response));case 9:case\"end\":return _context4.stop();}}},subjectEdit);}),subjectDelete:/*#__PURE__*/_regeneratorRuntime.mark(function subjectDelete(_ref10,_ref11){var payload,call,put,response;return _regeneratorRuntime.wrap(function subjectDelete$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:payload=_ref10.payload;call=_ref11.call,put=_ref11.put;_context5.next=4;return call(deletesubject,payload);case 4:response=_context5.sent;if(!response.status){message.error(response.msg||response.message||response.err,5);}if(response.status){message.success(response.message,5);}_context5.next=9;return put(_objectSpread({type:'del'},response));case 9:case\"end\":return _context5.stop();}}},subjectDelete);}),clearAction:/*#__PURE__*/_regeneratorRuntime.mark(function clearAction(_ref12,_ref13){var payload,call,put;return _regeneratorRuntime.wrap(function clearAction$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:payload=_ref12.payload;call=_ref13.call,put=_ref13.put;_context6.next=4;return put({type:'clear'});case 4:case\"end\":return _context6.stop();}}},clearAction);})},reducers:{list:function list(state,action){return _objectSpread(_objectSpread({},state),{},{list:action});},add:function add(state,action){action.count=state.add.count+1;return _objectSpread(_objectSpread({},state),{},{add:action});},edit:function edit(state,action){action.count=state.edit.count+1;return _objectSpread(_objectSpread({},state),{},{edit:action});},del:function del(state,action){action.count=state.del.count+1;return _objectSpread(_objectSpread({},state),{},{del:action});},clear:function clear(state,action){return _objectSpread(_objectSpread({},state),{},{edit:{count:0},del:{count:0}});}}};","map":{"version":3,"sources":["/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/src/models/subjects.js"],"names":["subjectAllList","createsubject","updatesubject","deletesubject","getsubjectList","message","namespace","state","add","count","edit","fileUp","del","subscriptions","setup","dispatch","history","effects","payload","call","put","response","status","error","msg","err","type","subjectAdd","success","subjectEdit","subjectDelete","clearAction","reducers","list","action","clear"],"mappings":"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","sourcesContent":["// import { lunchAllList, createlunch, updatelunch, deletelunch , getLunchList} from '../services/api'\r\n// import { message } from 'antd';\r\n\r\n// export default {\r\n//   namespace: 'subjects',\r\n\r\n//   state: {\r\n//     add: { count: 0 },\r\n//     edit: { count: 0 },\r\n//     fileUp: { count: 0 },\r\n//     del: { count: 0 }\r\n//   },\r\n\r\n//   subscriptions: {\r\n//     setup({ dispatch, history }) {\r\n//     },\r\n//   }, \r\n\r\n//   effects: {\r\n//     *lunchAllList({ payload }, { call, put }) {\r\n//       const response = yield call(lunchAllList, payload);\r\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n//       yield put({ type: 'list', ...response });\r\n//     },\r\n//     *getLunchList({ payload }, { call, put }) {\r\n//       const response = yield call(getLunchList, payload);\r\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n//       yield put({ type: 'list', ...response });\r\n//     },\r\n//     *lunchAdd({ payload }, { call, put }) {\r\n//       const response = yield call(createlunch, payload);\r\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n//       if (response.status) { message.success(response.message, 5); }\r\n//       yield put({ type: 'add', ...response });\r\n//     },\r\n//     *lunchEdit({ payload }, { call, put }) {\r\n//       const response = yield call(updatelunch, payload);\r\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n//       if (response.status) { message.success(response.message, 5); }\r\n//       yield put({ type: 'edit', ...response });\r\n//     },\r\n//     *lunchDelete({ payload }, { call, put }) {\r\n//       const response = yield call(deletelunch, payload);\r\n//       if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n//       if (response.status) { message.success(response.message, 5); }\r\n//       yield put({ type: 'del', ...response });\r\n//     },\r\n//     *clearAction({ payload }, { call, put }) {\r\n//       yield put({ type: 'clear'});\r\n//     },\r\n  \r\n//   },\r\n\r\n//   reducers: {\r\n//     list(state, action) {\r\n//       return { ...state, list: action };\r\n//     },\r\n//     add(state, action) {\r\n//       action.count = state.add.count + 1;\r\n//       return { ...state, add: action };\r\n//     },\r\n//     edit(state, action) {\r\n//       action.count = state.edit.count + 1;\r\n//       return { ...state, edit: action };\r\n//     },\r\n//     del(state, action) {\r\n//       action.count = state.del.count + 1;\r\n//       return { ...state, del: action };\r\n//     },\r\n//     clear(state, action) {\r\n//       return { ...state, edit:{count:0}, del:{count:0}};\r\n//       },\r\n//   },\r\n// };\r\n\r\n\r\nimport { subjectAllList, createsubject, updatesubject, deletesubject , getsubjectList} from '../services/api'\r\nimport { message } from 'antd';\r\n\r\nexport default {\r\n  namespace: 'subjects',\r\n\r\n  state: {\r\n    add: { count: 0 },\r\n    edit: { count: 0 },\r\n    fileUp: { count: 0 },\r\n    del: { count: 0 }\r\n  },\r\n\r\n  subscriptions: {\r\n    setup({ dispatch, history }) {\r\n    },\r\n  }, \r\n\r\n  effects: {\r\n    *subjectAllList({ payload }, { call, put }) {\r\n      const response = yield call(subjectAllList, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      yield put({ type: 'list', ...response });\r\n    },\r\n    *getsubjectList({ payload }, { call, put }) {\r\n      const response = yield call(getsubjectList, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      yield put({ type: 'list', ...response });\r\n    },\r\n    *subjectAdd({ payload }, { call, put }) {\r\n      const response = yield call(createsubject, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      if (response.status) { message.success(response.message, 5); }\r\n      yield put({ type: 'add', ...response });\r\n    },\r\n    *subjectEdit({ payload }, { call, put }) {\r\n      const response = yield call(updatesubject, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      if (response.status) { message.success(response.message, 5); }\r\n      yield put({ type: 'edit', ...response });\r\n    },\r\n    *subjectDelete({ payload }, { call, put }) {\r\n      const response = yield call(deletesubject, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      if (response.status) { message.success(response.message, 5); }\r\n      yield put({ type: 'del', ...response });\r\n    },\r\n    *clearAction({ payload }, { call, put }) {\r\n      yield put({ type: 'clear'});\r\n    },\r\n  \r\n  },\r\n\r\n  reducers: {\r\n    list(state, action) {\r\n      return { ...state, list: action };\r\n    },\r\n    add(state, action) {\r\n      action.count = state.add.count + 1;\r\n      return { ...state, add: action };\r\n    },\r\n    edit(state, action) {\r\n      action.count = state.edit.count + 1;\r\n      return { ...state, edit: action };\r\n    },\r\n    del(state, action) {\r\n      action.count = state.del.count + 1;\r\n      return { ...state, del: action };\r\n    },\r\n    clear(state, action) {\r\n      return { ...state, edit:{count:0}, del:{count:0}};\r\n      },\r\n  },\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { streamList, createstream, updatestream, deletestream, streamListEmployee } from '../services/api';\nimport { message } from 'antd';\nexport default {\n  namespace: 'streams',\n  state: {\n    add: {\n      count: 0\n    },\n    edit: {\n      count: 0\n    },\n    fileUp: {\n      count: 0\n    },\n    del: {\n      count: 0\n    }\n  },\n  subscriptions: {\n    setup(_ref) {\n      let {\n        dispatch,\n        history\n      } = _ref;\n    }\n\n  },\n  effects: {\n    *streamList(_ref2, _ref3) {\n      let {\n        payload\n      } = _ref2;\n      let {\n        call,\n        put\n      } = _ref3;\n      const response = yield call(streamList, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'list',\n        ...response\n      });\n    },\n\n    *streamListEmployee(_ref4, _ref5) {\n      let {\n        payload\n      } = _ref4;\n      let {\n        call,\n        put\n      } = _ref5;\n      const response = yield call(streamListEmployee, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'list',\n        ...response\n      });\n    },\n\n    *roleAdd(_ref6, _ref7) {\n      let {\n        payload\n      } = _ref6;\n      let {\n        call,\n        put\n      } = _ref7;\n      const response = yield call(createstream, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(response.message, 5);\n      }\n\n      yield put({\n        type: 'add',\n        ...response\n      });\n    },\n\n    *roleEdit(_ref8, _ref9) {\n      let {\n        payload\n      } = _ref8;\n      let {\n        call,\n        put\n      } = _ref9;\n      const response = yield call(updatestream, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(response.message, 5);\n      }\n\n      yield put({\n        type: 'edit',\n        ...response\n      });\n    },\n\n    *roleDelete(_ref10, _ref11) {\n      let {\n        payload\n      } = _ref10;\n      let {\n        call,\n        put\n      } = _ref11;\n      const response = yield call(deletestream, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(response.message, 5);\n      }\n\n      yield put({\n        type: 'del',\n        ...response\n      });\n    },\n\n    *clearAction(_ref12, _ref13) {\n      let {\n        payload\n      } = _ref12;\n      let {\n        call,\n        put\n      } = _ref13;\n      yield put({\n        type: 'clear'\n      });\n    }\n\n  },\n  reducers: {\n    list(state, action) {\n      return { ...state,\n        list: action\n      };\n    },\n\n    add(state, action) {\n      action.count = state.add.count + 1;\n      return { ...state,\n        add: action\n      };\n    },\n\n    edit(state, action) {\n      action.count = state.edit.count + 1;\n      return { ...state,\n        edit: action\n      };\n    },\n\n    del(state, action) {\n      action.count = state.del.count + 1;\n      return { ...state,\n        del: action\n      };\n    },\n\n    clear(state, action) {\n      return { ...state,\n        edit: {\n          count: 0\n        },\n        del: {\n          count: 0\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/src/models/streams.js"],"names":["streamList","createstream","updatestream","deletestream","streamListEmployee","message","namespace","state","add","count","edit","fileUp","del","subscriptions","setup","dispatch","history","effects","payload","call","put","response","status","error","msg","err","type","roleAdd","success","roleEdit","roleDelete","clearAction","reducers","list","action","clear"],"mappings":"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","sourcesContent":["import { streamList, createstream, updatestream, deletestream , streamListEmployee} from '../services/api'\r\nimport { message } from 'antd';\r\n\r\nexport default {\r\n  namespace: 'streams',\r\n\r\n  state: {\r\n    add: { count: 0 },\r\n    edit: { count: 0 },\r\n    fileUp: { count: 0 },\r\n    del: { count: 0 }\r\n  },\r\n\r\n  subscriptions: {\r\n    setup({ dispatch, history }) {\r\n    },\r\n  },\r\n\r\n  effects: {\r\n    *streamList({ payload }, { call, put }) {\r\n      const response = yield call(streamList, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      yield put({ type: 'list', ...response });\r\n    },\r\n    *streamListEmployee({ payload }, { call, put }) {\r\n      const response = yield call(streamListEmployee, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      yield put({ type: 'list', ...response });\r\n    },\r\n    *roleAdd({ payload }, { call, put }) {\r\n      const response = yield call(createstream, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      if (response.status) { message.success(response.message, 5); }\r\n      yield put({ type: 'add', ...response });\r\n    },\r\n    *roleEdit({ payload }, { call, put }) {\r\n      const response = yield call(updatestream, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      if (response.status) { message.success(response.message, 5); }\r\n      yield put({ type: 'edit', ...response });\r\n    },\r\n    *roleDelete({ payload }, { call, put }) {\r\n      const response = yield call(deletestream, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      if (response.status) { message.success(response.message, 5); }\r\n      yield put({ type: 'del', ...response });\r\n    },\r\n    *clearAction({ payload }, { call, put }) {\r\n      yield put({ type: 'clear'});\r\n    },\r\n  \r\n  },\r\n\r\n  reducers: {\r\n    list(state, action) {\r\n      return { ...state, list: action };\r\n    },\r\n    add(state, action) {\r\n      action.count = state.add.count + 1;\r\n      return { ...state, add: action };\r\n    },\r\n    edit(state, action) {\r\n      action.count = state.edit.count + 1;\r\n      return { ...state, edit: action };\r\n    },\r\n    del(state, action) {\r\n      action.count = state.del.count + 1;\r\n      return { ...state, del: action };\r\n    },\r\n    clear(state, action) {\r\n      return { ...state, edit:{count:0}, del:{count:0}};\r\n      },\r\n  },\r\n};"]},"metadata":{},"sourceType":"module"}
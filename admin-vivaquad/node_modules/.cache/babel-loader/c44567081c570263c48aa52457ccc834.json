{"ast":null,"code":"var _jsxFileName = \"/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/src/pages/class/action/addEdit.jsx\";\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport { Empty, Modal, Form, Input, Button, Switch, Upload, Dropdown, Menu, Select, notification, Transfer, DatePicker } from 'antd';\nimport { connect } from 'dva';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 24\n    }\n  }\n};\n\nconst AddEdit = props => {\n  var _props$roles, _props$roles$list, _props$roles$list$dat;\n\n  const [form] = Form.useForm();\n  const {\n    dispatch\n  } = props;\n  const [catlist, setCatlist] = useState([]);\n  const [count, setCount] = useState(0);\n  const [dcount, setDCount] = useState(0);\n  const [btnDis, setBtnDis] = useState(false);\n  let streamList = [];\n  let yearList = ['1 Year', '2 Year', '3 Year', '4 Year', '5 Year', '6 Year'];\n\n  if ((props === null || props === void 0 ? void 0 : (_props$roles = props.roles) === null || _props$roles === void 0 ? void 0 : (_props$roles$list = _props$roles.list) === null || _props$roles$list === void 0 ? void 0 : (_props$roles$list$dat = _props$roles$list.data) === null || _props$roles$list$dat === void 0 ? void 0 : _props$roles$list$dat.length) > 0) {\n    var _props$streams, _props$streams$list;\n\n    streamList = props === null || props === void 0 ? void 0 : (_props$streams = props.streams) === null || _props$streams === void 0 ? void 0 : (_props$streams$list = _props$streams.list) === null || _props$streams$list === void 0 ? void 0 : _props$streams$list.data;\n  }\n\n  console.log('streamList', streamList);\n  useEffect(() => {\n    let unmounted = false;\n    return () => {\n      unmounted = true;\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    let unmounted = false;\n    let data = props.detail;\n\n    if (props.detail) {\n      form.setFieldsValue({\n        ['name']: data.name\n      });\n    } else {\n      form.resetFields();\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  }, [props.visible]);\n  useEffect(() => {\n    let unmounted = false;\n    let {\n      classes\n    } = props;\n    setCatlist(classes.list ? classes.list.data : []);\n    return () => {\n      unmounted = true;\n    };\n  }, [props.classes.list]);\n\n  const onFinish = val => {\n    setBtnDis(true);\n\n    if (props.detail) {\n      val._id = props.detail._id;\n      dispatch({\n        type: 'classes/streamEdit',\n        payload: val\n      });\n    } else {\n      dispatch({\n        type: 'classes/streamAdd',\n        payload: val\n      });\n    }\n  };\n\n  useEffect(() => {\n    let unmounted = false;\n    let add = props.classes.add;\n    dispatch({\n      type: 'classes/streamListStudent'\n    });\n\n    if (!unmounted && add.count > count && add.status) {\n      setBtnDis(false);\n      setCount(add.count);\n      props.returnData('success');\n    } else if (!unmounted && add.count > count && !add.status) {\n      setBtnDis(false);\n      setCount(add.count);\n    } // Edit\n\n\n    let edit = props.classes.edit;\n\n    if (!unmounted && edit.count > dcount && edit.status) {\n      setBtnDis(false);\n      setDCount(edit.count);\n      props.returnData('success');\n    } else if (!unmounted && edit.count > dcount && !edit.status) {\n      setBtnDis(false);\n      setDCount(edit.count);\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  }, [props.classes]);\n\n  const cancelFun = () => {\n    if (!props.detail) form.resetFields();\n    props.closeModel();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: props.visible,\n    title: props.detail ? 'Edit Stream' : 'Add Stream',\n    onCancel: cancelFun,\n    footer: /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 110\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: cancelFun,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      disabled: btnDis,\n      className: \"btn-w25 btn-primary-light\",\n      onClick: () => form.submit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }, props.detail ? 'Edit Stream' : 'Add Stream')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n    form: form,\n    name: \"loc_info\",\n    layout: \"vertical\",\n    onFinish: onFinish,\n    className: \"innerFields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"stream_id\",\n    rules: [{\n      required: true,\n      message: 'This field is required!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Stream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, streamList && streamList.map((item, index) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: index,\n    value: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 58\n    }\n  }, item.name)))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year\",\n    rules: [{\n      required: true,\n      message: 'This field is required!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Employee Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, yearList && yearList.map((item, index) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 54\n    }\n  }, item)))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"class_name\",\n    rules: [{\n      required: true,\n      message: 'This field is required!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter Stream Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }))));\n};\n\nexport default connect(_ref => {\n  let {\n    classes,\n    streams,\n    global,\n    loading\n  } = _ref;\n  return {\n    classes: classes,\n    global: global,\n    loading: loading,\n    streams: streams\n  };\n})(AddEdit);","map":{"version":3,"sources":["/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/src/pages/class/action/addEdit.jsx"],"names":["React","useState","useEffect","useRef","Fragment","Empty","Modal","Form","Input","Button","Switch","Upload","Dropdown","Menu","Select","notification","Transfer","DatePicker","connect","formItemLayout","labelCol","xs","span","sm","AddEdit","props","form","useForm","dispatch","catlist","setCatlist","count","setCount","dcount","setDCount","btnDis","setBtnDis","streamList","yearList","roles","list","data","length","streams","console","log","unmounted","detail","setFieldsValue","name","resetFields","visible","classes","onFinish","val","_id","type","payload","add","status","returnData","edit","cancelFun","closeModel","submit","required","message","map","item","index","global","loading"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useRef, Fragment} from 'react';\r\nimport {Empty, Modal,Form,Input,Button,Switch, Upload, Dropdown, Menu, Select, notification, Transfer, DatePicker } from 'antd';\r\n\r\nimport { connect } from 'dva';\r\n\r\nconst formItemLayout = { labelCol: {xs: { span: 24, },  sm: { span: 24, },}};\r\n\r\nconst AddEdit =props => {\r\n\tconst [form] = Form.useForm();\r\n\tconst { dispatch} = props;\r\n\tconst [catlist, setCatlist] = useState([])\r\n\tconst [count, setCount] = useState(0)\r\n\tconst [dcount, setDCount] = useState(0)\r\n\tconst [btnDis, setBtnDis] = useState(false)\r\n\r\n\tlet streamList = []\r\n\tlet yearList = ['1 Year', '2 Year', '3 Year', '4 Year' , '5 Year' , '6 Year']\r\n\r\n\t\r\n    if(props?.roles?.list?.data?.length > 0){\r\n\t\tstreamList  =  props?.streams?.list?.data\r\n\t}\r\n\tconsole.log('streamList' , streamList)\r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\t\treturn () => {unmounted = true;}\r\n    },[dispatch])\r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\r\n\t\tlet data = props.detail;\t\t\r\n\t\tif(props.detail){\r\n\t\t\tform.setFieldsValue({\r\n\t\t\t  ['name']: data.name, \r\n\t\t\t});}\r\n\t\telse{ form.resetFields(); }\r\n\t\t\r\n\t\treturn () => {unmounted = true;}\r\n    },[props.visible])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\t\tlet {classes} = props;\r\n\t\tsetCatlist(classes.list ? classes.list.data:[]);\r\n\t\treturn () => {unmounted = true;}\r\n    },[props.classes.list])\r\n\t\r\n\tconst onFinish= val=>{\r\n\r\n\r\n\t\t\r\n\t\tsetBtnDis(true);\r\n\t\tif(props.detail){\r\n\t\t\tval._id = props.detail._id\r\n\t\t\tdispatch({type: 'classes/streamEdit',  payload: val,});\r\n\t\t}\r\n\t\telse{\r\n\t\t\t\r\n\t\t\tdispatch({type: 'classes/streamAdd',  payload: val,});\r\n\t\t}\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\t\tlet add = props.classes.add\r\n\t\tdispatch({type: 'classes/streamListStudent', });\r\n\t\tif(!unmounted && add.count > count && add.status){\r\n\t\t\tsetBtnDis(false);\r\n\t\t  setCount(add.count);\t\t  \r\n\t\t  props.returnData('success');\r\n\t\t}else if(!unmounted && add.count > count && !add.status){\r\n\t\t  setBtnDis(false);\r\n\t\t  setCount(add.count);\r\n\t\t}\r\n\t\t\r\n\t\t// Edit\r\n\t\tlet edit = props.classes.edit\r\n\t\tif(!unmounted && edit.count > dcount && edit.status){\r\n\t\t  setBtnDis(false);\r\n\t\t  setDCount(edit.count);\r\n\t\t  \r\n\t\t  props.returnData('success');\r\n\t\t}else if(!unmounted && edit.count > dcount && !edit.status){\r\n\t\t  setBtnDis(false);\r\n\t\t  setDCount(edit.count);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tunmounted = true;\r\n\t\t}\r\n\t},[props.classes])\r\n\t\r\n\tconst cancelFun = ()=>{\r\n\t\tif(!props.detail)\r\n\t\t\tform.resetFields();\r\n\t\tprops.closeModel()\r\n\t}\r\n\r\n\t\r\nreturn (\r\n\t<Modal visible={props.visible} title={props.detail?'Edit Stream':'Add Stream'} onCancel={cancelFun} footer={<Fragment>\r\n\t\t\t\t<Button onClick={cancelFun}>Cancel</Button>\r\n\t\t\t\t<Button type=\"primary\" disabled={btnDis} className=\"btn-w25 btn-primary-light\" onClick={()=>form.submit()}>{props.detail?'Edit Stream':'Add Stream'}</Button>\r\n\t\t\t</Fragment>} >\r\n\t\t\r\n\r\n\r\n\r\n\t\t<Form {...formItemLayout} form={form} name=\"loc_info\" layout=\"vertical\" onFinish={onFinish} className=\"innerFields\">\r\n\r\n\r\n\r\n\t\t<Form.Item name=\"stream_id\"  rules={[{ required: true, message: 'This field is required!' }]}  >\r\n\t\t\t\t\t\t\t\t<Select placeholder=\"Select Stream\" >\r\n\t\t\t\t\t\t\t\t\t\t{streamList && streamList.map((item, index) => <Select.Option key={index} value={item._id}>{item.name}</Select.Option>)}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"year\"  rules={[{ required: true, message: 'This field is required!' }]}  >\r\n\t\t\t\t\t\t\t\t<Select placeholder=\"Select Employee Type\" >\r\n\t\t\t\t\t\t\t\t\t\t{yearList && yearList.map((item, index) => <Select.Option key={index} value={item}>{item}</Select.Option>)}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item name=\"class_name\"  rules={[{ required: true, message: 'This field is required!' }]} >\r\n\t\t\t\t<Input placeholder=\"Enter Stream Name\" />\r\n\t\t\t</Form.Item>\r\n\t\t\t\r\n\t\t</Form>\r\n\t\t\r\n\t</Modal>\r\n)};\r\n\r\nexport default connect(({ classes,streams, global, loading }) => ({\r\n  classes:classes,\r\n  global: global,\r\n  loading: loading ,\r\n  streams: streams\r\n}))(AddEdit);"]},"metadata":{},"sourceType":"module"}
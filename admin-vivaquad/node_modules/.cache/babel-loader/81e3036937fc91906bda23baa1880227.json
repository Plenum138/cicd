{"ast":null,"code":"var _jsxFileName = \"/Users/plenum/Desktop/react-native/vivaquad/admin-backend/admin-vivaquad/src/pages/payments/payment.js\";\nimport React, { useState } from 'react';\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      lineHeight: \"27px\",\n      color: \"#212529\",\n      fontSize: \"1.1rem\",\n      \"::placeholder\": {\n        color: \"#aab7c4\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n}; // export default function PaymentPage(props) {\n// \tconst [loading, setLoading] = useState(false);\n// \tconst [errorMsg, setErrorMsg] = useState('');\n// \tconst [name, setName] = useState('');\n// \tconst [email, setEmail] = useState('');\n// const stripe = useStripe();\n// const elements = useElements();\n// \tconst handleSubmit = async (event) => {\n// \t\t// We don't want to let default form submission happen here,\n// \t\t// which would refresh the page.\n// \t\tevent.preventDefault();\n// \t\tif (!stripe || !elements) {\n// \t\t\t// Stripe.js has not yet loaded.\n// \t\t\t// Make sure to disable form submission until Stripe.js has loaded.\n// \t\t\treturn;\n// \t\t}\n// \t};\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t<h1> dfg</h1>\n// \t\t\t<h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n// \t\t\t\t<span className=\"text-muted\">Pay with card</span>\n// \t\t\t</h4>\n// \t\t\t<form onSubmit={handleSubmit}>\n// \t\t\t\t<div className=\"row\">\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cc-name\">Name on card</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tid=\"cc-name\"\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tvalue={name}\n// \t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cc-email\">Email</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tid=\"cc-email\"\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tvalue={email}\n// \t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"row\">\n// \t\t\t\t\t<div className=\"col-md-12 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cc-number\">Card Number</label>\n// \t\t\t\t\t\t<CardNumberElement\n// \t\t\t\t\t\t\tid=\"cc-number\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\toptions={CARD_ELEMENT_OPTIONS}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"row\">\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"expiry\">Expiration Date</label>\n// \t\t\t\t\t\t<CardExpiryElement\n// \t\t\t\t\t\t\tid=\"expiry\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\toptions={CARD_ELEMENT_OPTIONS}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cvc\">CVC</label>\n// \t\t\t\t\t\t<CardCvcElement\n// \t\t\t\t\t\t\tid=\"cvc\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\toptions={CARD_ELEMENT_OPTIONS}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<hr className=\"mb-4\" />\n// \t\t\t\t<button className=\"btn btn-dark w-100\" type=\"submit\" disabled={loading}>\n// \t\t\t\t\t{loading ? <div className=\"spinner-border spinner-border-sm text-light\" role=\"status\"></div> : `PAY ₹${10}`}\n// \t\t\t\t</button>\n// \t\t\t\t{errorMsg && <div className=\"text-danger mt-2\">{errorMsg}</div>}\n// \t\t\t</form>\n// \t\t</React.Fragment>\n// \t);\n// }\n\nconst PaymentPage = () => {\n  const stripe = useStripe(); // const elements = useElements();\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }\n  }, \" PaymentPage Page \");\n};\n\nexport default PaymentPage;","map":{"version":3,"sources":["/Users/plenum/Desktop/react-native/vivaquad/admin-backend/admin-vivaquad/src/pages/payments/payment.js"],"names":["React","useState","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","CARD_ELEMENT_OPTIONS","style","base","lineHeight","color","fontSize","invalid","iconColor","PaymentPage","stripe"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACCC,SADD,EACYC,WADZ,EAECC,iBAFD,EAEoBC,iBAFpB,EAEuCC,cAFvC,QAGO,yBAHP;AAKA,MAAMC,oBAAoB,GAAG;AAC5BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE;AACLC,MAAAA,UAAU,EAAE,MADP;AAELC,MAAAA,KAAK,EAAE,SAFF;AAGLC,MAAAA,QAAQ,EAAE,QAHL;AAIL,uBAAiB;AAChBD,QAAAA,KAAK,EAAE;AADS;AAJZ,KADA;AASNE,IAAAA,OAAO,EAAE;AACRF,MAAAA,KAAK,EAAE,SADC;AAERG,MAAAA,SAAS,EAAE;AAFH;AATH;AADqB,CAA7B,C,CAiBA;AAIA;AACA;AAEA;AACA;AAEC;AACA;AAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGd,SAAS,EAAxB,CADyB,CAEzB;;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD;AAGA,CAPD;;AAUA,eAAea,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n\tuseStripe, useElements,\n\tCardNumberElement, CardExpiryElement, CardCvcElement\n} from '@stripe/react-stripe-js';\n\nconst CARD_ELEMENT_OPTIONS = {\n\tstyle: {\n\t\tbase: {\n\t\t\tlineHeight: \"27px\",\n\t\t\tcolor: \"#212529\",\n\t\t\tfontSize: \"1.1rem\",\n\t\t\t\"::placeholder\": {\n\t\t\t\tcolor: \"#aab7c4\",\n\t\t\t},\n\t\t},\n\t\tinvalid: {\n\t\t\tcolor: \"#fa755a\",\n\t\t\ticonColor: \"#fa755a\",\n\t\t},\n\t},\n};\n\n// export default function PaymentPage(props) {\n\n\n\n// \tconst [loading, setLoading] = useState(false);\n// \tconst [errorMsg, setErrorMsg] = useState('');\n\n// \tconst [name, setName] = useState('');\n// \tconst [email, setEmail] = useState('');\n\n\t// const stripe = useStripe();\n\t// const elements = useElements();\n\n// \tconst handleSubmit = async (event) => {\n// \t\t// We don't want to let default form submission happen here,\n// \t\t// which would refresh the page.\n// \t\tevent.preventDefault();\n\n// \t\tif (!stripe || !elements) {\n// \t\t\t// Stripe.js has not yet loaded.\n// \t\t\t// Make sure to disable form submission until Stripe.js has loaded.\n// \t\t\treturn;\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t<h1> dfg</h1>\n// \t\t\t<h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n// \t\t\t\t<span className=\"text-muted\">Pay with card</span>\n// \t\t\t</h4>\n// \t\t\t<form onSubmit={handleSubmit}>\n\n// \t\t\t\t<div className=\"row\">\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cc-name\">Name on card</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tid=\"cc-name\"\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tvalue={name}\n// \t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cc-email\">Email</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tid=\"cc-email\"\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tvalue={email}\n// \t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div className=\"row\">\n// \t\t\t\t\t<div className=\"col-md-12 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cc-number\">Card Number</label>\n// \t\t\t\t\t\t<CardNumberElement\n// \t\t\t\t\t\t\tid=\"cc-number\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\toptions={CARD_ELEMENT_OPTIONS}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div className=\"row\">\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"expiry\">Expiration Date</label>\n// \t\t\t\t\t\t<CardExpiryElement\n// \t\t\t\t\t\t\tid=\"expiry\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\toptions={CARD_ELEMENT_OPTIONS}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"col-md-6 mb-3\">\n// \t\t\t\t\t\t<label htmlFor=\"cvc\">CVC</label>\n// \t\t\t\t\t\t<CardCvcElement\n// \t\t\t\t\t\t\tid=\"cvc\"\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\toptions={CARD_ELEMENT_OPTIONS}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<hr className=\"mb-4\" />\n// \t\t\t\t<button className=\"btn btn-dark w-100\" type=\"submit\" disabled={loading}>\n// \t\t\t\t\t{loading ? <div className=\"spinner-border spinner-border-sm text-light\" role=\"status\"></div> : `PAY ₹${10}`}\n// \t\t\t\t</button>\n// \t\t\t\t{errorMsg && <div className=\"text-danger mt-2\">{errorMsg}</div>}\n// \t\t\t</form>\n// \t\t</React.Fragment>\n// \t);\n// }\n\n\n\n\nconst PaymentPage = () => {\n\tconst stripe = useStripe();\n\t// const elements = useElements();\n\n\treturn (\n\t\t<h1> PaymentPage Page </h1>\n\t)\n}\n\n\nexport default PaymentPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/plenum/Desktop/react-native/vivaquad/admin-backend/admin-vivaquad/src/pages/payments/CheckoutForm.js\";\nimport React, { useState } from 'react';\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      lineHeight: \"27px\",\n      color: \"#212529\",\n      fontSize: \"1.1rem\",\n      \"::placeholder\": {\n        color: \"#aab7c4\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n};\nexport default function CheckoutForm(props) {\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState(''); // const stripe = useStripe();\n  // const elements = useElements();\n\n  const handleSubmit = async event => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault(); // if (!stripe || !elements) {\n    //     // Stripe.js has not yet loaded.\n    //     // Make sure to disable form submission until Stripe.js has loaded.\n    //     return;\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"d-flex justify-content-between align-items-center mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Pay with card\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cc-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Name on card\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cc-name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cc-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cc-email\",\n    type: \"text\",\n    className: \"form-control\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cc-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Card Number\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark w-100\",\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-border spinner-border-sm text-light\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 32\n    }\n  }) : `PAY â‚¹${props.amount}`), errorMsg && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 30\n    }\n  }, errorMsg)));\n}","map":{"version":3,"sources":["/Users/plenum/Desktop/react-native/vivaquad/admin-backend/admin-vivaquad/src/pages/payments/CheckoutForm.js"],"names":["React","useState","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","CARD_ELEMENT_OPTIONS","style","base","lineHeight","color","fontSize","invalid","iconColor","CheckoutForm","props","loading","setLoading","errorMsg","setErrorMsg","name","setName","email","setEmail","handleSubmit","event","preventDefault","e","target","value","amount"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    useStripe, useElements,\n    CardNumberElement, CardExpiryElement, CardCvcElement\n} from '@stripe/react-stripe-js';\n\nconst CARD_ELEMENT_OPTIONS = {\n    style: {\n        base: {\n            lineHeight: \"27px\",\n            color: \"#212529\",\n            fontSize: \"1.1rem\",\n            \"::placeholder\": {\n                color: \"#aab7c4\",\n            },\n        },\n        invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\",\n        },\n    },\n};\n\n\n\nexport default function CheckoutForm(props) {\n    const [loading, setLoading] = useState(false);\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n\n    // const stripe = useStripe();\n    // const elements = useElements();\n\n    const handleSubmit = async (event) => {\n        // We don't want to let default form submission happen here,\n        // which would refresh the page.\n        event.preventDefault();\n\n        // if (!stripe || !elements) {\n        //     // Stripe.js has not yet loaded.\n        //     // Make sure to disable form submission until Stripe.js has loaded.\n        //     return;\n        // }\n    };\n\n    return (\n        <React.Fragment>\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n                <span className=\"text-muted\">Pay with card</span>\n            </h4>\n            <form onSubmit={handleSubmit}>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"cc-name\">Name on card</label>\n                        <input\n                            id=\"cc-name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"cc-email\">Email</label>\n                        <input\n                            id=\"cc-email\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-12 mb-3\">\n                        <label htmlFor=\"cc-number\">Card Number</label>\n                        {/* <CardNumberElement\n                            id=\"cc-number\"\n                            className=\"form-control\"\n                            options={CARD_ELEMENT_OPTIONS}\n                        /> */}\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    {/* <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"expiry\">Expiration Date</label>\n                        <CardExpiryElement\n                            id=\"expiry\"\n                            className=\"form-control\"\n                            options={CARD_ELEMENT_OPTIONS}\n                        />\n                    </div>\n                    <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"cvc\">CVC</label>\n                        <CardCvcElement\n                            id=\"cvc\"\n                            className=\"form-control\"\n                            options={CARD_ELEMENT_OPTIONS}\n                        />\n                    </div> */}\n                </div>\n\n                <hr className=\"mb-4\" />\n                <button className=\"btn btn-dark w-100\" type=\"submit\" disabled={loading}>\n                    {loading ? <div className=\"spinner-border spinner-border-sm text-light\" role=\"status\"></div> : `PAY â‚¹${props.amount}`}\n                </button>\n                {errorMsg && <div className=\"text-danger mt-2\">{errorMsg}</div>}\n            </form>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/src/pages/plan/userplanlist.js\";\nimport React from 'react';\nimport { connect } from 'dva';\nimport { Empty, Card, Typography, Alert, Input, Button, Table, Radio, Divider, Switch, Row, Col, Avatar, Pagination, Tabs, Modal, Popconfirm } from 'antd';\nimport { UserOutlined, LockOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport jwt_decode from \"jwt-decode\";\nimport fetch from 'dva/fetch';\nimport Moment from 'react-moment';\nimport AddEdit from './action/addEdit';\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\nconst {\n  TabPane\n} = Tabs;\nconst baseUrl = process.env.REACT_APP_ApiUrl;\n\nclass PlanList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ListFun = () => {\n      const user = jwt_decode(localStorage.getItem('token'));\n\n      if (user.role === \"ADMIN\") {\n        let search = 'page=' + (this.state.current - 1) + \"&limit=\" + this.state.limit + \"&inactive=\" + this.state.inactive + \"&searchText=\" + this.state.searchText + \"&sortBy=\" + this.state.sortBy;\n        localStorage.setItem('newsSearch', JSON.stringify(this.state));\n        let searchval = {\n          page: this.state.current - 1,\n          limit: this.state.limit,\n          inactive: this.state.inactive,\n          searchText: this.state.searchText,\n          sortBy: this.state.sortBy\n        };\n        this.props.dispatch({\n          type: 'plans/getUserPlanList',\n          payload: searchval\n        });\n      } else {\n        let search = 'page=' + (this.state.current - 1) + \"&limit=\" + this.state.limit + \"&inactive=\" + this.state.inactive + \"&searchText=\" + this.state.searchText + \"&sortBy=\" + this.state.sortBy;\n        localStorage.setItem('newsSearch', JSON.stringify(this.state));\n        let searchval = {\n          page: this.state.current - 1,\n          limit: this.state.limit,\n          inactive: this.state.inactive,\n          searchText: this.state.searchText,\n          sortBy: this.state.sortBy,\n          _id: user._id\n        };\n        this.props.dispatch({\n          type: 'plans/getUserPlanList',\n          payload: searchval\n        });\n      }\n    };\n\n    this.ShowSizeChange = (current, size) => this.setState({\n      limit: size\n    }, () => this.ListFun());\n\n    this.switchFun = val => this.setState({\n      inactive: val\n    }, () => this.ListFun());\n\n    this.ChangeOrder = val => this.setState({\n      sortBy: this.state.sortBy === 'asc' ? 'desc' : 'asc'\n    }, () => this.ListFun());\n\n    this.paginationFun = val => this.setState({\n      current: val.current\n    }, () => this.ListFun());\n\n    this.searchVal = val => {\n      this.state.searchText = val;\n      const resultAutos = this.props.plans.user_list.data.filter(auto => auto.plan_price.toLowerCase().includes(val.toLowerCase()));\n      this.setState({\n        listData: resultAutos\n      });\n    };\n\n    this.createCat = val => {\n      console.log(val);\n\n      if (val) {\n        this.ListFun();\n      }\n\n      this.setState({\n        detail: '',\n        addModel: false\n      });\n    };\n\n    this.deleteCat = id => {\n      this.props.dispatch({\n        type: 'plans/planDelete',\n        payload: {\n          _id: id\n        }\n      });\n    };\n\n    this.state = {\n      count: 0,\n      Addcount: 0,\n      limit: 25,\n      current: 1,\n      searchText: '',\n      loader: false,\n      detail: '',\n      addModel: false,\n      listData: [],\n      data: [],\n      pagination: {\n        current: 1,\n        pageSize: 10\n      },\n      loading: false,\n      sortBy: 'asc',\n      inactive: false\n    };\n    setTimeout(() => document.title = 'User Plan List', 100);\n  }\n\n  componentDidMount() {\n    this.ListFun();\n    this.props.dispatch({\n      type: 'plans/clearAction'\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (snapshot) {\n      this.ListFun();\n    }\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    if (this.props.plans.del && this.props.plans.del.count > this.state.count && this.props.plans.del.status) {\n      this.setState({\n        count: this.props.plans.del.count\n      });\n      return true;\n    }\n\n    if (this.props.plans.add && this.props.plans.add.count > this.state.Addcount && this.props.plans.add.status) {\n      this.setState({\n        Addcount: this.props.plans.add.count,\n        addModel: false\n      });\n      return true;\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      loading,\n      addModel,\n      detail,\n      searchText\n    } = this.state;\n    const {\n      plans\n    } = this.props;\n    const total = 0;\n    const totalActive = 0;\n\n    if (this.state.searchText == '') {\n      this.state.listData = plans.user_list ? plans.user_list.data : [];\n    }\n\n    console.log('this.state.listData', this.state.listData);\n    const productsAvilabilityColumns = [{\n      title: /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }\n      }, \"User Email\"),\n      dataIndex: 'email',\n      render: (val, data) => {\n        return data.email ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"text-info\\t\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 31\n          }\n        }, data.email) : '-';\n      }\n    }, {\n      title: /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }\n      }, \"Payment Method\"),\n      dataIndex: 'payment_method_details'\n    }, {\n      title: /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }\n      }, \"Payment Status\"),\n      dataIndex: 'payment_status',\n      render: (val, data) => {\n        return data.payment_status == \"true\" ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"text-info\\t\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 50\n          }\n        }, data.email) : '-';\n      }\n    }, {\n      title: /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }\n      }, \"Created Date\"),\n      dataIndex: 'created_at',\n      render: (val, data) => {\n        return data.created_at ? /*#__PURE__*/React.createElement(Moment, {\n          format: \"MM- DD-YYYY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 36\n          }\n        }, data.created_at) : '-';\n      }\n    } // {\n    //   title: <strong>Action</strong>, width: 100, align: 'center',\n    //   render: (val, data) => <div onClick={e => e.stopPropagation()}>\n    //     <Popconfirm title=\"Are you sure delete plans?\" onConfirm={e => { this.deleteCat(data._id); e.stopPropagation() }} okText=\"Yes\" cancelText=\"No\" >\n    //       <Button type=\"danger\" ><DeleteOutlined /></Button>\n    //     </Popconfirm>\n    //   </div>\n    // },\n    ];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginBottom: \"0.625rem\"\n      },\n      className: \"TopActionBar\",\n      gutter: [16, 0],\n      justify: \"space-between\",\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"Search...\",\n      loading: this.props.submitting,\n      onChange: e => this.searchVal(e.target.value),\n      value: searchText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => this.setState({\n        addModel: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(Table, {\n      columns: productsAvilabilityColumns,\n      rowKey: record => record._id,\n      dataSource: this.state.listData,\n      loading: this.props.loading.global,\n      onChange: this.paginationFun,\n      onRow: (record, rowIndex) => {\n        return {// onClick: plans => this.setState({ addModel: true, detail: record })\n        };\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(AddEdit, {\n      visible: addModel,\n      returnData: this.createCat,\n      closeModel: () => this.setState({\n        addModel: false,\n        detail: ''\n      }),\n      detail: detail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\n;\nexport default connect(_ref => {\n  let {\n    plans,\n    loading\n  } = _ref;\n  return {\n    plans,\n    loading\n  };\n})(PlanList);","map":{"version":3,"sources":["/Users/kalyansingh/Desktop/Project/vivaquad/admin-backend/admin-vivaquad/src/pages/plan/userplanlist.js"],"names":["React","connect","Empty","Card","Typography","Alert","Input","Button","Table","Radio","Divider","Switch","Row","Col","Avatar","Pagination","Tabs","Modal","Popconfirm","UserOutlined","LockOutlined","DeleteOutlined","ExclamationCircleOutlined","jwt_decode","fetch","Moment","AddEdit","Search","Text","TabPane","baseUrl","process","env","REACT_APP_ApiUrl","PlanList","Component","constructor","props","ListFun","user","localStorage","getItem","role","search","state","current","limit","inactive","searchText","sortBy","setItem","JSON","stringify","searchval","page","dispatch","type","payload","_id","ShowSizeChange","size","setState","switchFun","val","ChangeOrder","paginationFun","searchVal","resultAutos","plans","user_list","data","filter","auto","plan_price","toLowerCase","includes","listData","createCat","console","log","detail","addModel","deleteCat","id","count","Addcount","loader","pagination","pageSize","loading","setTimeout","document","title","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","getSnapshotBeforeUpdate","del","status","add","render","total","totalActive","productsAvilabilityColumns","dataIndex","email","payment_status","created_at","marginBottom","submitting","e","target","value","record","global","rowIndex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'dva';\r\nimport { Empty, Card, Typography, Alert, Input, Button, Table, Radio, Divider, Switch, Row, Col, Avatar, Pagination, Tabs, Modal, Popconfirm } from 'antd';\r\nimport { UserOutlined, LockOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport fetch from 'dva/fetch';\r\nimport Moment from 'react-moment';\r\nimport AddEdit from './action/addEdit';\r\n\r\nconst { Search } = Input;\r\nconst { Text } = Typography;\r\nconst { TabPane } = Tabs;\r\nconst baseUrl = process.env.REACT_APP_ApiUrl\r\n\r\nclass PlanList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { count: 0, Addcount: 0, limit: 25, current: 1, searchText: '', loader: false, detail: '', addModel: false, listData: [], data: [], pagination: { current: 1, pageSize: 10 }, loading: false, sortBy: 'asc', inactive: false }\r\n    setTimeout(() => document.title = 'User Plan List', 100);\r\n  }\r\n  componentDidMount() {\r\n    this.ListFun();\r\n    this.props.dispatch({ type: 'plans/clearAction' });\r\n  }\r\n\r\n  ListFun = () => {\r\n    const user = jwt_decode(localStorage.getItem('token'));\r\nif (user.role === \"ADMIN\") {\r\n  let search = 'page=' + (this.state.current - 1) + \"&limit=\" + this.state.limit + \"&inactive=\" + this.state.inactive + \"&searchText=\" + this.state.searchText + \"&sortBy=\" + this.state.sortBy;\r\n  localStorage.setItem('newsSearch', JSON.stringify(this.state));\r\n  let searchval = { page: this.state.current - 1, limit: this.state.limit, inactive: this.state.inactive, searchText: this.state.searchText, sortBy: this.state.sortBy }\r\n  this.props.dispatch({ type: 'plans/getUserPlanList', payload: searchval, });\r\n} else {\r\n  let search = 'page=' + (this.state.current - 1) + \"&limit=\" + this.state.limit + \"&inactive=\" + this.state.inactive + \"&searchText=\" + this.state.searchText + \"&sortBy=\" + this.state.sortBy;\r\n  localStorage.setItem('newsSearch', JSON.stringify(this.state))\r\n\r\n  let searchval = { page: this.state.current - 1, limit: this.state.limit, inactive: this.state.inactive, searchText: this.state.searchText, sortBy: this.state.sortBy, _id: user._id }\r\n  this.props.dispatch({ type: 'plans/getUserPlanList', payload: searchval, });\r\n}\r\n\r\n}\r\nShowSizeChange = (current, size) => this.setState({ limit: size }, () => this.ListFun());\r\nswitchFun = (val) => this.setState({ inactive: val }, () => this.ListFun());\r\nChangeOrder = (val) => this.setState({ sortBy: this.state.sortBy === 'asc' ? 'desc' : 'asc' }, () => this.ListFun());\r\npaginationFun = (val) => this.setState({ current: val.current }, () => this.ListFun());\r\n\r\n  searchVal = (val) => {\r\n    this.state.searchText = val\r\n    const resultAutos = this.props.plans.user_list.data.filter((auto) => auto.plan_price.toLowerCase().includes(val.toLowerCase()))\r\n\r\n    this.setState({ listData: resultAutos })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (snapshot) {\r\n\t\t\tthis.ListFun()\r\n\t\t}\r\n  }\r\n  \r\n  createCat = (val) => {\r\n\t\tconsole.log(val)\r\n\t\tif (val) { this.ListFun() }\r\n\t\tthis.setState({ detail: '', addModel: false })\r\n  }\r\n  \r\n  deleteCat = id => {\r\n\t\tthis.props.dispatch({ type: 'plans/planDelete', payload: { _id: id }, });\r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n\r\n\t\tif (this.props.plans.del && this.props.plans.del.count > this.state.count && this.props.plans.del.status) {\r\n\t\t\tthis.setState({ count: this.props.plans.del.count })\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (this.props.plans.add && this.props.plans.add.count > this.state.Addcount && this.props.plans.add.status) {\r\n\t\t\tthis.setState({ Addcount: this.props.plans.add.count, addModel: false })\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n \r\n  render() {\r\n    const {loading, addModel, detail, searchText} = this.state;\r\n    const { plans } = this.props;\r\n    const total = 0; \r\n    const totalActive = 0;\r\n    if (this.state.searchText == '') {\r\n      this.state.listData = plans.user_list ? plans.user_list.data : [];\r\n    }\r\n\r\n\r\n    console.log('this.state.listData' ,this.state.listData)\r\n\r\n\r\n\r\n    const productsAvilabilityColumns = [\r\n      {\r\n        title: <strong>User Email</strong>,\r\n        dataIndex: 'email',\r\n        render:(val,data) => {\r\n          return (data.email? <span className=\"text-info\t\" >{data.email}</span>:'-')\r\n        }\r\n      },\r\n      {\r\n        title: <strong>Payment Method</strong>,\r\n        dataIndex: 'payment_method_details',\r\n      \r\n      },\r\n      {\r\n        title: <strong>Payment Status</strong>,\r\n        dataIndex: 'payment_status',\r\n        render:(val,data) => {\r\n          return (data.payment_status == \"true\"? <span className=\"text-info\t\" >{data.email}</span>:'-')\r\n        }\r\n      \r\n      },\r\n      \r\n      {\r\n        title: <strong>Created Date</strong>,\r\n        dataIndex: 'created_at',  \r\n        render:(val,data) => {\r\n          return (data.created_at? <Moment format=\"MM- DD-YYYY\" >{data.created_at}</Moment>:'-')\r\n        }\r\n      },\r\n      // {\r\n      //   title: <strong>Action</strong>, width: 100, align: 'center',\r\n      //   render: (val, data) => <div onClick={e => e.stopPropagation()}>\r\n      //     <Popconfirm title=\"Are you sure delete plans?\" onConfirm={e => { this.deleteCat(data._id); e.stopPropagation() }} okText=\"Yes\" cancelText=\"No\" >\r\n      //       <Button type=\"danger\" ><DeleteOutlined /></Button>\r\n      //     </Popconfirm>\r\n      //   </div>\r\n      // },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n      <Card>\r\n        <Row style={{ marginBottom: \"0.625rem\" }} className=\"TopActionBar\" gutter={[16, 0]} justify=\"space-between\" align=\"middle\">\r\n          <Col>\r\n            <Search placeholder=\"Search...\" loading={this.props.submitting} onChange={(e) => this.searchVal(e.target.value)} value={searchText} />\r\n          </Col>\r\n          <Col>\r\n            <Button type=\"primary\" onClick={() => this.setState({ addModel: true })}>Add</Button>\r\n          </Col>\r\n        </Row>\r\n        <Table\r\n          columns={productsAvilabilityColumns}\r\n          rowKey={record => record._id}\r\n          dataSource={this.state.listData}\r\n          loading={this.props.loading.global}\r\n          onChange={this.paginationFun}\r\n          onRow={(record, rowIndex) => {\r\n            return {\r\n              // onClick: plans => this.setState({ addModel: true, detail: record })\r\n            };\r\n          }}\r\n        \r\n        />\r\n      </Card>\r\n      <AddEdit visible={addModel} returnData={this.createCat} closeModel={() => this.setState({ addModel: false, detail: '' })} detail={detail} />\r\n      </>\r\n\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default connect(({ plans, loading }) => ({\r\n  plans, \r\n  loading\r\n}))(PlanList);\r\n"]},"metadata":{},"sourceType":"module"}